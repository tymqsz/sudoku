# -*- coding: utf-8 -*-
"""my_digit.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15k9ybNRN2SNv3hrNoGMgNMVsA_kDkTM8
"""

import pandas as pd
import numpy as np
import keras
from keras import Sequential
from keras.layers import Conv2D, MaxPooling2D, Flatten, Dense, Dropout
from keras import regularizers
from sklearn.utils import shuffle
from keras.models import save_model
from sklearn.model_selection import train_test_split

df1 = pd.read_csv("data/train_digit.csv")
ones = pd.read_csv("data/1.csv")
fours = pd.read_csv("data/4.csv")

df1 = df1.drop(df1[df1["label"] == 1].index)
df1 = df1.drop(df1[df1["label"] == 4].index)
df = pd.concat([df1, ones, fours], axis=0)

df = shuffle(df)
y = np.array(df["label"])
X = np.array(df.drop((["label"]), axis=1))

X = X.reshape(-1, 28, 28, 1)

model = keras.Sequential([
    Conv2D(32, (3, 3), activation='relu', input_shape=(28, 28, 1)),
    MaxPooling2D((2, 2)),
    Conv2D(64, (3, 3), activation='relu'),
    MaxPooling2D((2, 2)),
    Flatten(),
    Dense(256, activation='relu'),
    Dropout(0.3),
    Dense(128, activation='relu'),
    Dropout(0.3),
    Dense(10, activation='softmax')
])

model.compile(
    loss=keras.losses.SparseCategoricalCrossentropy(),
    optimizer=keras.optimizers.Adam(learning_rate=1e-3),
    metrics=[
        keras.metrics.SparseCategoricalAccuracy(name="acc"),
    ],
)

model.fit(X, y, epochs=10, validation_split=0.1, batch_size=64,
          callbacks=[keras.callbacks.EarlyStopping(monitor="val_acc", patience=7, restore_best_weights=True)])

model.save("models/digitModel.keras")